pipeline{
    agent any
    environment{
        DOCKER_NAME = "francisgrane"
    }
    
    stages{
        stage('Clean the Directory'){
            steps{
                deleteDir()
            }
        }
        stage('Pull te code the Git'){
            steps{
                git credentialsId: 'gitpass', url: 'https://github.com/francisgrane/DevOps-CICD.git'
            }
        }
        stage("Maven Unit Test"){
            steps{
                sh "mvn test"
            }
        }
        stage("create Artifact"){
            steps{
                sh 'mvn clean install'
            }
        }
        stage("Verify the code "){
            steps{
                sh "mvn verify"
            }
        }
        stage("Build the Docker Image"){
            steps{
                def JOB=env.JOB_NAME.toLowerCase()
                sh "docker build -t ${JOB}:${BUILD_NUMBER} ."
            }
        }
        stage("Tagging the Image"){
            steps{
                sh "docker tag ${JOB}:${BUILD_NUMBER} ${DOCKER_NAME}/${JOB}:v${BUILD_NUMBER}"
                sh "docker tag ${JOB}:${BUILD_NUMBER} ${DOCKER_NAME}/${JOB}:latest"
            }
        }
        stage("Trivy Scan"){
            steps{
                sh "trivy image  ${BUILD_NUMBER} ${DOCKER_NAME}/${JOB}:v${BUILD_NUMBER}"
            }
        }
        stage("Push The Images to the Dockerub"){
            steps{
                def JOB=env.JOB_NAME.toLowerCase()
                sh "docker login -u ${DOCKER_NAME} -p ${dockerpass}"
                sh "docker push ${DOCKER_NAME}/${JOB}:v${BUILD_NUMBER}"
                sh "docker push ${DOCKER_NAME}/${JOB}:latest"
            }
        }
        stage("Docker Prune"){
            steps{
                sh "docker imge prune -af"
            }
        }
        
    }
}
